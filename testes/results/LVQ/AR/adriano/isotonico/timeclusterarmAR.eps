%!PS-Adobe-2.0 EPSF-2.0
%%Title: com_traintime_AR.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Jul 19 19:49:05 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (com_traintime_AR.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Daniel Stefany,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jul 19 19:49:05 2012)
  /DOCINFO pdfmark
end
} ifelse
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1206 1296 M
5724 0 V
stroke
LTb
1206 1296 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 1296 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 1632 M
5724 0 V
stroke
LTb
1206 1632 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 1632 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 200)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 1968 M
5724 0 V
stroke
LTb
1206 1968 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 1968 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 400)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 2304 M
5724 0 V
stroke
LTb
1206 2304 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 2304 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 600)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 2640 M
5724 0 V
stroke
LTb
1206 2640 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 2640 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 800)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 2976 M
5724 0 V
stroke
LTb
1206 2976 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 2976 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1000)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 3312 M
5724 0 V
stroke
LTb
1206 3312 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 3312 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1200)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 3648 M
5724 0 V
stroke
LTb
1206 3648 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 3648 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1400)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 3984 M
5724 0 V
stroke
LTb
1206 3984 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 3984 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1600)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 4320 M
5724 0 V
stroke
LTb
1206 4320 M
63 0 V
5661 0 R
-63 0 V
stroke
1098 4320 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1800)]
] -60.0 MRshow
1.000 UL
LTb
2160 1296 M
0 63 V
stroke
2160 1116 M
[ [(Helvetica) 180.0 0.0 true true 0 (AR3)]
] -60.0 MCshow
1.000 UL
LTb
3114 1296 M
0 63 V
stroke
3114 1116 M
[ [(Helvetica) 180.0 0.0 true true 0 (AR4)]
] -60.0 MCshow
1.000 UL
LTb
4068 1296 M
0 63 V
stroke
4068 1116 M
[ [(Helvetica) 180.0 0.0 true true 0 (AR6)]
] -60.0 MCshow
1.000 UL
LTb
5022 1296 M
0 63 V
stroke
5022 1116 M
[ [(Helvetica) 180.0 0.0 true true 0 (AR8)]
] -60.0 MCshow
1.000 UL
LTb
5976 1296 M
0 63 V
stroke
5976 1116 M
[ [(Helvetica) 180.0 0.0 true true 0 (AR10)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1206 4320 M
0 -3024 V
5724 0 V
0 3024 R
-5724 0 R
stroke
LCb setrgbcolor
/Times-Roman reencodeISO def
360 2808 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 240.0 0.0 true true 0 (Tempo \(s\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4068 846 M
[ [(Times-Roman) 200.0 0.0 true true 0 (Ordem MAR )]
] -66.7 MCshow
4068 646 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( ---------------Quantidade de Unidades de Saida--------------)]
] -66.7 MCshow
LTb
4068 4770 M
[ [(Times-Roman) 260.0 0.0 true true 0 (Treinamento da rede LVQ para diferentes ordens de MAR )]
] -86.7 MCshow
4068 4510 M
[ [(Times-Roman) 260.0 0.0 true true 0 ( em relacao a diferentes numeros de unidades de saida)]
] -86.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
0.73 1.00 1.00 C LTb
1922 333 M
[ [(Helvetica) 180.0 0.0 true true 0 (120)]
] -60.0 MLshow
LT0
0.73 1.00 1.00 C 1319 288 N 0 -90 495 0 0 90 h
LTw
LT0
0.73 1.00 1.00 C 1726 1296 N 0 -81 87 0 0 81 h
2680 1296 N 0 -88 87 0 0 88 h
3634 1296 N 0 -123 87 0 0 123 h
4588 1296 N 0 -143 87 0 0 143 h
5542 1296 N 0 -180 87 0 0 180 h
1.000 UL
LT1
0.50 1.00 0.83 C LTb
1922 153 M
[ [(Helvetica) 180.0 0.0 true true 0 (240)]
] -60.0 MLshow
LT1
0.50 1.00 0.83 C 1319 108 N 0 -90 495 0 0 90 h
LTw
LT1
0.50 1.00 0.83 C 1813 1296 N 0 -149 87 0 0 149 h
2767 1296 N 0 -170 87 0 0 170 h
3721 1296 N 0 -225 87 0 0 225 h
4675 1296 N 0 -280 87 0 0 280 h
5629 1296 N 0 -357 87 0 0 357 h
1.000 UL
LT2
0.40 0.80 0.67 C LTb
3065 333 M
[ [(Helvetica) 180.0 0.0 true true 0 (360)]
] -60.0 MLshow
LT2
0.40 0.80 0.67 C 2462 288 N 0 -90 495 0 0 90 h
LTw
LT2
0.40 0.80 0.67 C 1900 1296 N 0 -215 87 0 0 215 h
2854 1296 N 0 -254 87 0 0 254 h
3808 1296 N 0 -333 87 0 0 333 h
4762 1296 N 0 -418 87 0 0 418 h
5716 1296 N 0 -512 87 0 0 512 h
1.000 UL
LT3
1.00 1.00 0.88 C LTb
3065 153 M
[ [(Helvetica) 180.0 0.0 true true 0 (480)]
] -60.0 MLshow
LT3
1.00 1.00 0.88 C 2462 108 N 0 -90 495 0 0 90 h
LTw
LT3
1.00 1.00 0.88 C 1987 1296 N 0 -285 86 0 0 285 h
2941 1296 N 0 -332 86 0 0 332 h
3895 1296 N 0 -441 86 0 0 441 h
4849 1296 N 0 -562 86 0 0 562 h
5803 1296 N 0 -668 86 0 0 668 h
1.000 UL
LT4
1.00 0.93 0.55 C LTb
4208 333 M
[ [(Helvetica) 180.0 0.0 true true 0 (600)]
] -60.0 MLshow
LT4
1.00 0.93 0.55 C 3605 288 N 0 -90 495 0 0 90 h
LTw
LT4
1.00 0.93 0.55 C 2073 1296 N 0 -372 87 0 0 372 h
3027 1296 N 0 -408 87 0 0 408 h
3981 1296 N 0 -545 87 0 0 545 h
4935 1296 N 0 -688 87 0 0 688 h
5889 1296 N 0 -829 87 0 0 829 h
1.000 UL
LT5
1.00 1.00 0.00 C LTb
4208 153 M
[ [(Helvetica) 180.0 0.0 true true 0 (720)]
] -60.0 MLshow
LT5
1.00 1.00 0.00 C 3605 108 N 0 -90 495 0 0 90 h
LTw
LT5
1.00 1.00 0.00 C 2160 1296 N 0 -408 87 0 0 408 h
3114 1296 N 0 -485 87 0 0 485 h
4068 1296 N 0 -648 87 0 0 648 h
5022 1296 N 0 -802 87 0 0 802 h
5976 1296 N 0 -992 87 0 0 992 h
1.000 UL
LT6
1.00 0.76 0.76 C LTb
5351 333 M
[ [(Helvetica) 180.0 0.0 true true 0 (840)]
] -60.0 MLshow
LT6
1.00 0.76 0.76 C 4748 288 N 0 -90 495 0 0 90 h
LTw
LT6
1.00 0.76 0.76 C 2247 1296 N 0 -469 86 0 0 469 h
3201 1296 N 0 -567 86 0 0 567 h
4155 1296 N 0 -750 86 0 0 750 h
5109 1296 N 0 -927 86 0 0 927 h
6063 1296 N 0 -1180 86 0 0 1180 h
1.000 UL
LT7
1.00 0.55 0.41 C LTb
5351 153 M
[ [(Helvetica) 180.0 0.0 true true 0 (960)]
] -60.0 MLshow
LT7
1.00 0.55 0.41 C 4748 108 N 0 -90 495 0 0 90 h
LTw
LT7
1.00 0.55 0.41 C 2333 1296 N 0 -541 87 0 0 541 h
3287 1296 N 0 -636 87 0 0 636 h
4241 1296 N 0 -852 87 0 0 852 h
5195 1296 N 0 -1049 87 0 0 1049 h
6149 1296 N 0 -1374 87 0 0 1374 h
1.000 UL
LT8
1.00 0.42 0.42 C LTb
6494 333 M
[ [(Helvetica) 180.0 0.0 true true 0 (1080)]
] -60.0 MLshow
LT8
1.00 0.42 0.42 C 5891 288 N 0 -90 495 0 0 90 h
LTw
LT8
1.00 0.42 0.42 C 2420 1296 N 0 -586 87 0 0 586 h
3374 1296 N 0 -708 87 0 0 708 h
4328 1296 N 0 -949 87 0 0 949 h
5282 1296 N 0 -1305 87 0 0 1305 h
6236 1296 N 0 -1550 87 0 0 1550 h
1.000 UL
LT0
1.00 0.00 0.00 C LTb
6494 153 M
[ [(Helvetica) 180.0 0.0 true true 0 (1200)]
] -60.0 MLshow
LT0
1.00 0.00 0.00 C 5891 108 N 0 -90 495 0 0 90 h
LTw
LT0
1.00 0.00 0.00 C 2507 1296 N 0 -640 87 0 0 640 h
3461 1296 N 0 -791 87 0 0 791 h
4415 1296 N 0 -1051 87 0 0 1051 h
5369 1296 N 0 -1338 87 0 0 1338 h
6323 1296 N 0 -2890 87 0 0 2890 h
1.000 UL
LTb
1206 4320 M
0 -3024 V
5724 0 V
0 3024 R
-5724 0 R
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
